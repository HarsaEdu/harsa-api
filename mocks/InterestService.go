// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	web "github.com/HarsaEdu/harsa-api/internal/model/web"
)

// InterestService is an autogenerated mock type for the InterestService type
type InterestService struct {
	mock.Mock
}

// CreateInterest provides a mock function with given fields: profileID, request
func (_m *InterestService) CreateInterest(profileID uint, request *web.InterestRequest) error {
	ret := _m.Called(profileID, request)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint, *web.InterestRequest) error); ok {
		r0 = rf(profileID, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetInterestRecommendation provides a mock function with given fields: profileID
func (_m *InterestService) GetInterestRecommendation(profileID uint) (*[]web.InterestResponse, error) {
	ret := _m.Called(profileID)

	var r0 *[]web.InterestResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(uint) (*[]web.InterestResponse, error)); ok {
		return rf(profileID)
	}
	if rf, ok := ret.Get(0).(func(uint) *[]web.InterestResponse); ok {
		r0 = rf(profileID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]web.InterestResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(profileID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewInterestService creates a new instance of InterestService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterestService(t interface {
	mock.TestingT
	Cleanup(func())
}) *InterestService {
	mock := &InterestService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
