// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// CloudinaryUploader is an autogenerated mock type for the CloudinaryUploader type
type CloudinaryUploader struct {
	mock.Mock
}

// Uploader provides a mock function with given fields: c, fileheader, folderName, required
func (_m *CloudinaryUploader) Uploader(c echo.Context, fileheader string, folderName string, required bool) (string, error) {
	ret := _m.Called(c, fileheader, folderName, required)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, string, bool) (string, error)); ok {
		return rf(c, fileheader, folderName, required)
	}
	if rf, ok := ret.Get(0).(func(echo.Context, string, string, bool) string); ok {
		r0 = rf(c, fileheader, folderName, required)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(echo.Context, string, string, bool) error); ok {
		r1 = rf(c, fileheader, folderName, required)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCloudinaryUploader creates a new instance of CloudinaryUploader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCloudinaryUploader(t interface {
	mock.TestingT
	Cleanup(func())
}) *CloudinaryUploader {
	mock := &CloudinaryUploader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
